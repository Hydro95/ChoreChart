class User {
	String name;
	
	void allocateTask(Task task) {}
}

class Parent {
	isA User;
	void createNewAccount(String name) {}
}

class Task {

	enum Repeat {NEVER, DAILY, WEEKLY, MONTHY, YEARLY}
	
	Date deadline;
	Time length;
	String comment;
	boolean completed;
	Repeat frequency;
	

	void markCompleted() {}

	status {
		Unallocated {
			allocateTask -> InProgress;
			deadlinePassed -> Failed;
		}
		InProgress {
			markCompleted -> Completed;
			release -> Unallocated;
			deadlinePassed -> Failed;
		}
		Completed {}
		Failed { extendDeadline -> Unallocated; }
	}

}

class Allocation {

	void markCompleted() {}

	0..1 -- 1 Task;
	* -- 1 User;
}


class Tools {
	String name;

	* -- * Task;
}

class ShoppingList {
	String location; // example hardware or grocery store
	List<String> items;

	void add(String item) {}
	void delete(int index) {}

	1 -- 1 Task;
}


class Facade {

	createNewAccount(String name) {}
	allocateTask(User user, Task task) {}
	markCompleted(User user, Task, task) {}
	addToShopping(ShoppingList list, String item) {}

	1 -- * User;
	1 -- * Task;
	1 -- * Tools;
	1 -- * ShoppingList;
}